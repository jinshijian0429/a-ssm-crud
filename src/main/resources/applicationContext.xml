<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<context:component-scan base-package="com.atguigu.crud">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<!--spring配置文件,配置和业务逻辑相关的 -->
	<!--数据源 -->
	<context:property-placeholder location="classpath:dbConfig.properties"/>
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="driverClass" value="${jdbc.driver}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!--整合Mybatis配置文件  -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <!--mybatis文件位置 -->
	    <property name="configLocation" value="classpath:mybatis-config.xml"></property>
	    <!--数据源 -->
	    <property name="dataSource" ref="dataSource"></property>
	    <!--mybatis sql映射文件位置  -->
	    <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	<!--执行Batch批量操作的sqlSession-->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	    <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"></constructor-arg>
	    <constructor-arg name="executorType" value="BATCH"></constructor-arg>
	</bean>
	
	<!--映射扫描器:所有dao接口的实现类加入到IOC容器中.方便Autowired  -->
	<!--也可,但莫名报错正常使用  <mybatis-spring:scan base-package="com.atguigu.crud.dao"/> -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.atguigu.crud.dao"></property>
	</bean>
	
	<!--事务控制  -->
	<!-- 数据库事务管理器:控制数据源 -->
	<bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	       <property name="dataSource" ref="dataSource"></property>
	</bean>
	<!--开启基于注解的事务或者使用xml配置形式的事务 (推荐!!) -->
	<!-- <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/> -->
	<aop:config>
	   <!--切入点表达式  -->
	   <aop:pointcut expression="execution(* com.atguigu.crud.service..*(..))" id="txPoint"/>
	   <!--配置事务增强  -->
	   <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
	</aop:config>
	<!--配置事务增强,事务如何切入  -->
	<tx:advice id="txAdvice" transaction-manager="dataSourceTransactionManager">
	     <tx:attributes>
	        <!--所有方法都是事务方法  -->
	        <tx:method name="*"/>
	        <!--所有get  -->
	        <tx:method name="get*" read-only="true"/>
	     </tx:attributes>
	</tx:advice>
	<!-- Spring配置文件的核心点（数据源、与mybatis的整合，事务控制） -->
</beans>
